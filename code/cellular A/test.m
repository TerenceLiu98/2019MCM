%%% img read %%%%
%%%%%%%%%%%%%%%%%
RGB1 = imread('/Volumes/Storage/2019_MCM-ICM_Problems/Louvre/Bird-view/1ST FLOOR.png');
RGB2 = imread('/Volumes/Storage/2019_MCM-ICM_Problems/Louvre/Bird-view/2ND FLOOR.png');
RGB3 = imread('/Volumes/Storage/2019_MCM-ICM_Problems/Louvre/Bird-view/GROUND FLOOR.png');
RGB4 = imread('/Volumes/Storage/2019_MCM-ICM_Problems/Louvre/Bird-view/LOWER GROUND FLOOR.png');
RGB5 = imread('/Volumes/Storage/2019_MCM-ICM_Problems/Louvre/Bird-view/NAPOLEON HALL.png');

% rg2gray %
I = rgb2gray(RGB1);
I2 = rgb2gray(RGB2);
I3 = rgb2gray(RGB3);
I4 = rgb2gray(RGB4);
I5 = rgb2gray(RGB5);

%for j = 1:size(RGB2,2)
 %   if RGB2(j) == 0
  %      RGB2(j) = 247
   %     j
   % end
%end
%for j = 1:size(RGB2,1)
%    if RGB2(j) == 0
%        RGB2(j) == 247
%        j
%    end
%end

list = ["RGB1", "RGB2", "RGB3","RGb4", "RGB5"];
for i = 1:size(list)
    a = cmunique(eval('handles',strcat(list(i))));
    imageSegmenter(a)
end

%for i = 1:size(list)
%   a = segmentImage(eval('handles',strcat(list(i))));
%end



%%%%% function %%%%%%

function [BW,maskedImage] = segmentImage(X)
%segmentImage Segment image using auto-generated code from imageSegmenter app
%  [BW,MASKEDIMAGE] = segmentImage(X) segments image X using auto-generated
%  code from the imageSegmenter app. The final segmentation is returned in
%  BW, and a masked image is returned in MASKEDIMAGE.

% Auto-generated by imageSegmenter app on 26-Jan-2019
%----------------------------------------------------


% Normalize input data to range in [0,1].
Xmin = min(X(:));
Xmax = max(X(:));
if isequal(Xmax,Xmin)
    X = 0*X;
else
    X = (X - Xmin) ./ (Xmax - Xmin);
end

% Auto clustering
sz = size(X);
im = single(reshape(X,sz(1)*sz(2),[]));e
im = im - mean(im);
im = im ./ std(im);
s = rng;
rng('default');
L = kmeans(im,2,'Replicates',2);
rng(s);

BW = L == 2;
BW = reshape(BW,[sz(1) sz(2)]);

% Create masked image.
maskedImage = X;
maskedImage(~BW) = 0;
end

